{"componentChunkName":"component---src-templates-page-jsx","path":"/react/grid/docs/guides/paging/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"react-grid---paging\"><a href=\"#react-grid---paging\" aria-label=\"react grid   paging permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Grid - Paging</h1>\n<p>The Grid component supports data paging. You can specify the page size and switch pages programmatically or via the Paging Panel's UI controls. The paging state management, Paging Panel rendering, and built-in paging logic are implemented in the corresponding plugins. You can also configure the Grid to use server-side paging if your data service supports it.</p>\n<h2 id=\"related-plugins\"><a href=\"#related-plugins\" aria-label=\"related plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related Plugins</h2>\n<p>The following plugins implement filtering features:</p>\n<ul>\n<li><a href=\"../reference/paging-state.md\">PagingState</a> - controls the paging state</li>\n<li><a href=\"../reference/integrated-paging.md\">IntegratedPaging</a> - performs built-in data paging</li>\n<li><a href=\"../reference/custom-paging.md\">CustomPaging</a> - allows implementing a custom totalCount calculation logic</li>\n<li><a href=\"../reference/paging-panel.md\">PagingPanel</a> - renders the Paging Panel in the Grid footer</li>\n</ul>\n<p>Note that the <a href=\"./plugin-overview.md#plugin-order\">plugin order</a> is important.</p>\n<h2 id=\"basic-paging-setup\"><a href=\"#basic-paging-setup\" aria-label=\"basic paging setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Paging Setup</h2>\n<p>Use the <code class=\"language-text\">PagingState</code>, <code class=\"language-text\">IntegratedPaging</code> (or <code class=\"language-text\">CustomPaging</code>), and <code class=\"language-text\">PagingPanel</code> plugins to set up a Grid with paging.</p>\n<h3 id=\"uncontrolled-mode\"><a href=\"#uncontrolled-mode\" aria-label=\"uncontrolled mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uncontrolled Mode</h3>\n<p>In <a href=\"controlled-and-uncontrolled-modes.md\">uncontrolled mode</a>, specify the initial active page index in the <code class=\"language-text\">PagingState</code> plugin's <code class=\"language-text\">defaultCurrentPage</code> property.</p>\n<p>In the following example, the page size is specified using the <code class=\"language-text\">PagingState</code> plugin's <code class=\"language-text\">pageSize</code> property, which is usual for the controlled mode. However, the <code class=\"language-text\">onPageSizeChange</code> event handler is not specified because the page size is not supposed to be changed internally as the Page Size Selector is not available.</p>\n<p>.embedded-demo({ \"path\": \"grid-paging/uncontrolled-mode\", \"showThemeSelector\": true })</p>\n<h4 id=\"page-size-selection\"><a href=\"#page-size-selection\" aria-label=\"page size selection permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Page Size Selection</h4>\n<p>Assign an array of available page sizes to the <code class=\"language-text\">PagingPanel</code> plugin's <code class=\"language-text\">pageSizes</code> property to enable page size selection via the UI. The Page Size Selector displays the 'All' item if the specified array contains an item whose value is 0. You can specify custom text for this Page Size Selector item using the <code class=\"language-text\">messages.showAll</code> property.</p>\n<p>The example below demonstrates a basic configuration for the uncontrolled mode. The <code class=\"language-text\">PagingState</code> plugin's <code class=\"language-text\">defaultPageSize</code> property defines the initial page size.</p>\n<p>.embedded-demo({ \"path\": \"grid-paging/page-size-selector\", \"showThemeSelector\": true })</p>\n<h3 id=\"controlled-mode\"><a href=\"#controlled-mode\" aria-label=\"controlled mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Controlled Mode</h3>\n<p>In <a href=\"controlled-and-uncontrolled-modes.md\">controlled mode</a>, specify the following <code class=\"language-text\">PagingState</code> plugin property pairs to set a state value and handle its changes:</p>\n<ul>\n<li><code class=\"language-text\">currentPage</code> and <code class=\"language-text\">onCurrentPageChange</code> - the currently displayed page's index</li>\n<li><code class=\"language-text\">pageSize</code> and <code class=\"language-text\">onPageSizeChange</code> - the page size</li>\n</ul>\n<p>Note that the <code class=\"language-text\">onPageSizeChange</code> handler makes sense only if the <code class=\"language-text\">pageSizes</code> option is specified. Otherwise, a user is not able to change the page size.</p>\n<p>.embedded-demo({ \"path\": \"grid-paging/controlled-mode\", \"showThemeSelector\": true })</p>\n<h2 id=\"remote-paging\"><a href=\"#remote-paging\" aria-label=\"remote paging permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remote Paging</h2>\n<p>You can handle the Grid's paging state changes to request page data from the server according to the current page index and the page size if your data service supports paging.</p>\n<p>Paging options are updated once an end-user interacts with Paging Panel controls. Handle paging option changes using the <code class=\"language-text\">PagingState</code> plugin's <code class=\"language-text\">onCurrentPageChange</code> and <code class=\"language-text\">onPageSizeChange</code> events, and request data from the server using the applied paging options. Once the page data is received from the server, pass it to the <code class=\"language-text\">Grid</code> component's <code class=\"language-text\">rows</code> property.</p>\n<p>For remote paging, use the <code class=\"language-text\">CustomPaging</code> plugin instead of the <code class=\"language-text\">IntegratedPaging</code> plugin.</p>\n<p>.embedded-demo({ \"path\": \"grid-paging/remote-paging\", \"showThemeSelector\": true })</p>\n<h2 id=\"use-paging-with-other-data-processing-plugins\"><a href=\"#use-paging-with-other-data-processing-plugins\" aria-label=\"use paging with other data processing plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use Paging with Other Data Processing Plugins</h2>\n<p>When you use paging features with sorting, grouping, or filtering, take note of the order in which the plugins appear in the Grid's container. You need to choose whether to paginate filtered rows or filter the current page. In the former case, put the <code class=\"language-text\">IntegratedFiltering</code> plugin before the <code class=\"language-text\">IntegratedPaging</code> one. Otherwise, inverse the plugins' order.</p>","fields":{"technology":"react/grid","section":"docs"},"frontmatter":{"title":""}}},"pageContext":{"slug":"react/grid/docs/guides/paging/"}},"staticQueryHashes":["3159585216","3662068265"]}