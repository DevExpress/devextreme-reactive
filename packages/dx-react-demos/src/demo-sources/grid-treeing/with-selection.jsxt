import React from 'react';<%&additionalImports%>
import {
  SelectionState,
  IntegratedSelection,
  TreeingState,
  CustomTreeing,
} from '@devexpress/dx-react-grid';
import {
  Grid,
  Table,
  TableHeaderRow,
  TableTreeing,
} from '@devexpress/dx-react-grid-<%&themeName%>';

import {
  generateRows,
  defaultColumnValues,
} from '../../../demo-data/generator';

const getChildRows = (rows, rootRows) => ((rootRows === rows)
  ? rootRows.filter(row => row.parentId === null)
  : rows)
    .map(row => ({ row, childRows: rootRows.filter(r => r.parentId === row.id) }));

export default class Demo extends React.PureComponent {
  constructor(props) {
    super(props);

    this.state = {
      columns: [
        { name: 'name', title: 'Name' },
        { name: 'sex', title: 'Sex' },
        { name: 'city', title: 'City' },
        { name: 'car', title: 'Car' },
      ],
      tableColumnExtensions: [
        { columnName: 'name', width: 360 },
      ],
      data: generateRows({
        columnValues: {
          id: ({ index }) => index,
          parentId: ({ index, random }) => index > 0 ? Math.trunc(random() * index / 2) : null,
          ...defaultColumnValues,
        },
        length: 20,
      }),
    };
  }
  render() {
    const { data, columns, tableColumnExtensions } = this.state;

    return (
      <<%&wrapperTag%>>
        <Grid
          rows={data}
          columns={columns}
        >
          <SelectionState />
          <TreeingState />
          <CustomTreeing
            getChildRows={getChildRows}
          />
          <IntegratedSelection />
          <Table
            columnExtensions={tableColumnExtensions}
          />
          <TableHeaderRow />
          <TableTreeing
            showSelectionControls
          />
        </Grid>
      </<%&wrapperTag%>>
    );
  }
}
