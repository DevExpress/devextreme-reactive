import * as React from 'react';<%&additionalImports%>
import {
  Chart,
  AreaSeries,
  BarSeries,
  SplineSeries,
  ScatterSeries,
  ArgumentAxis,
  ValueAxis,
  Title,
  Legend,
} from '@devexpress/dx-react-chart-<%&themeName%>';

import { Stack, Scale, Animation, EventTracker, HoverState } from '@devexpress/dx-react-chart';

import { oilProduction } from '../../../demo-data/data-vizualization';

const makeLabel = (symbol, color) => ({ text, style, ...restProps }) => (
  <ValueAxis.Label
    text={`${text} ${symbol}`}
    style={{
      fill: color,
      ...style
    }}
    {...restProps}
  />
);

const priceSeriesName = 'Oil Price';
const priceColor = '#efc564';
const consumptionColor = '#7cb2b7';

const PriceLabel = makeLabel('$', priceColor);
const LabelWithThousand = makeLabel('k', consumptionColor);

const pointOptions = { size: 10 };
const Point = props => (
  <ScatterSeries.Point point={pointOptions} {...props} />
);

const LineWithPoints = props => (
  <React.Fragment>
    <SplineSeries.Path {...props} />
    <ScatterSeries.Path {...props} pointComponent={Point} />
  </React.Fragment>
);

const legendRootStyle = {
  display: 'flex',
  margin: 'auto',
  flexDirection: 'row',
};
const LegendRoot = props => (
  <Legend.Root style={legendRootStyle} {...props} />
);

const legendLabelStyle = {
  whiteSpace: 'nowrap',
};
const LegendLabel = props => (
  <Legend.Label style={legendLabelStyle} {...props} />
);

const stacks = [
  { series: ['USA', 'Saudi Arabia', 'Iran', 'Mexico', 'Russia'] },
];

export default class Demo extends React.PureComponent {
  constructor(props) {
    super(props);

    this.state = {
      oilProduction,
      hover: null,
    };

    this.changeHover = (target) => this.setState(({ hover }) => ({
      hover: target && target.series === priceSeriesName ? target : null,
    }));
  }

  render() {
    const { oilProduction: chartData } = this.state;

    return (
      <<%&wrapperTag%><%&wrapperAttributes%>>
        <Chart
          data={chartData}
        >

          <ArgumentAxis />
          <ValueAxis
            scaleName="oil"
            max={2200}
            labelComponent={LabelWithThousand}
          />
          <ValueAxis
            scaleName="price"
            position="right"
            min={0}
            max={110}
            labelComponent={PriceLabel}
          />

          <Title
            text="Oil production vs Oil price"
            style={{ marginRight: '120px' }}
          />

          <BarSeries
            name="USA"
            valueField="usa"
            argumentField="year"
            scaleName="oil"
          />
          <BarSeries
            name="Saudi Arabia"
            valueField="saudiArabia"
            argumentField="year"
            scaleName="oil"
          />
          <BarSeries
            name="Iran"
            valueField="iran"
            argumentField="year"
            scaleName="oil"
          />
          <BarSeries
            name="Mexico"
            valueField="mexico"
            argumentField="year"
            scaleName="oil"
          />
          <BarSeries
            name="Russia"
            valueField="russia"
            argumentField="year"
            scaleName="oil"
          />
          <AreaSeries
            name="Consumption"
            valueField="consumption"
            argumentField="year"
            scaleName="oil"
            color={consumptionColor}
          />
          <SplineSeries
            name={priceSeriesName}
            valueField="price"
            argumentField="year"
            scaleName="price"
            color={priceColor}
            seriesComponent={LineWithPoints}
          />
          <Animation />
          <Legend
            position="bottom"
            rootComponent={LegendRoot}
            labelComponent={LegendLabel}
          />
          <Stack stacks={stacks} />
          <Scale />
          <EventTracker />
          <HoverState hover={this.state.hover} onHoverChange={this.changeHover} />
        </Chart>
      </<%&wrapperTag%>>
    );
  }
}
