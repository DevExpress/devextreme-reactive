import React, { useState } from 'react';<%&additionalImports%>
import {
  GroupingState,
  IntegratedGrouping,
} from '@devexpress/dx-react-grid';
import {
  Grid,
  Table,
  TableHeaderRow,
  TableGroupRow,
} from '@devexpress/dx-react-grid-<%&themeName%>';
<%&cssImports%>

import { generateRows } from '../../../demo-data/generator';

const GroupCellContent = ({ row, ...restProps }) => (
  <TableGroupRow.Content {...restProps}>
    from
    {' '}
    {row.value.from}
    {' '}
    to
    {' '}
    {row.value.to}
  </TableGroupRow.Content>
);

const nameGroupCriteria = (value) => {
  const firstLetter = String(value).substr(0, 1).toLowerCase();
  const groupValue = firstLetter < 'n'
    ? { from: 'A', to: 'M' }
    : { from: 'N', to: 'Z' };
  return {
    value: groupValue,
    key: `${groupValue.from}-${groupValue.to}`,
  };
};

export default () => {
  const [columns] = useState([
    { name: 'name', title: 'Name' },
    { name: 'gender', title: 'Gender' },
    { name: 'city', title: 'City' },
    { name: 'car', title: 'Car' },
  ]);
  const [rows] = useState(generateRows({ length: 8 }));
  const [grouping] = useState([{ columnName: 'name' }]);
  const [integratedGroupingColumnExtensions] = useState([
    { columnName: 'name', criteria: nameGroupCriteria },
  ]);
  const [tableGroupColumnExtension] = useState([
    { columnName: 'name', showWhenGrouped: true },
  ]);

  return (
    <<%&wrapperTag%><%&wrapperAttributes%>>
      <Grid
        rows={rows}
        columns={columns}
      >
        <GroupingState
          grouping={grouping}
          defaultExpandedGroups={['N-Z']}
        />
        <IntegratedGrouping
          columnExtensions={integratedGroupingColumnExtensions}
        />
        <Table />
        <TableHeaderRow />
        <TableGroupRow
          columnExtensions={tableGroupColumnExtension}
          contentComponent={GroupCellContent}
        />
      </Grid>
    </<%&wrapperTag%>>
  );
};
