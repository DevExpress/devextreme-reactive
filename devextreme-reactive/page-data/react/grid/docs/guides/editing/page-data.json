{"componentChunkName":"component---src-templates-page-jsx","path":"/react/grid/docs/guides/editing/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"react-grid---editing\"><a href=\"#react-grid---editing\" aria-label=\"react grid   editing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Grid - Editing</h1>\n<p>The Grid allows users to create, update, and delete rows. You can manage the editing state and edit data programmatically. The editing state contains information about rows and cells being edited, and rows that have been created or deleted but not yet committed. Once a user finishes editing a row (clicks the Save or Delete button), the <code class=\"language-text\">EditingState</code> plugin raises the <code class=\"language-text\">onCommitChanges</code> event, and resets the row's editing state. This same event is also raised when a user finishes editing a cell in inline editing mode.</p>\n<h2 id=\"related-plugins\"><a href=\"#related-plugins\" aria-label=\"related plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related Plugins</h2>\n<p>The following plugins implement editing features:</p>\n<ul>\n<li><a href=\"../reference/editing-state.md\">EditingState</a> - controls the editing state</li>\n<li><a href=\"../reference/table-edit-row.md\">TableEditRow</a> - renders the row being edited</li>\n<li><a href=\"../reference/table-edit-column.md\">TableEditColumn</a> - renders a command column (a column containing controls used for row editing/creating/deleting and committing/canceling changes)</li>\n<li><a href=\"../reference/table-inline-cell-editing.md\">TableInlineCellEditing</a> - renders the cell being edited</li>\n</ul>\n<p>Note that the <a href=\"./plugin-overview.md#plugin-order\">plugin order</a> is important.</p>\n<h2 id=\"basic-setup\"><a href=\"#basic-setup\" aria-label=\"basic setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Setup</h2>\n<p>Add the plugins listed above to the Grid to set up a simple Grid supporting editing features.</p>\n<p>Handle the <code class=\"language-text\">EditingState</code> plugin's <code class=\"language-text\">onCommitChanges</code> event to commit changes made by an end-user to your data store.</p>\n<h3 id=\"uncontrolled-mode\"><a href=\"#uncontrolled-mode\" aria-label=\"uncontrolled mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uncontrolled Mode</h3>\n<p>In <a href=\"controlled-and-uncontrolled-modes.md\">uncontrolled mode</a>, you can specify the initial editing state values using the following <code class=\"language-text\">EditingState</code> plugin's properties:</p>\n<ul>\n<li><code class=\"language-text\">defaultEditingRowIds</code> - the rows being edited</li>\n<li><code class=\"language-text\">defaultAddedRows</code> - the rows being added</li>\n<li><code class=\"language-text\">defaultRowChanges</code> - the row changes</li>\n<li><code class=\"language-text\">defaultDeletedRowIds</code> - the rows being deleted</li>\n</ul>\n<p>.embedded-demo({ \"path\": \"grid-editing/edit-row\", \"showThemeSelector\": true })</p>\n<h3 id=\"controlled-mode\"><a href=\"#controlled-mode\" aria-label=\"controlled mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Controlled Mode</h3>\n<p>In <a href=\"controlled-and-uncontrolled-modes.md\">controlled mode</a>, specify the following <code class=\"language-text\">EditingState</code> plugin's property pairs to set a state value and handle its changes:</p>\n<ul>\n<li><code class=\"language-text\">editingRowIds</code> and <code class=\"language-text\">onEditingRowIdsChange</code> - the rows being edited</li>\n<li><code class=\"language-text\">addedRows</code> and <code class=\"language-text\">onAddedRowsChange</code> - the rows being added</li>\n<li><code class=\"language-text\">rowChanges</code> and <code class=\"language-text\">onRowChangesChange</code> - the row changes</li>\n<li><code class=\"language-text\">deletedRowIds</code> and <code class=\"language-text\">onDeletedRowIdsChange</code> - the rows being deleted</li>\n</ul>\n<p>Note, you can also use the <code class=\"language-text\">onAddedRowsChange</code> event to initialize a created row with default property values.</p>\n<p>.embedded-demo({ \"path\": \"grid-editing/edit-row-controlled\", \"showThemeSelector\": true })</p>\n<h2 id=\"inline-cell-editing\"><a href=\"#inline-cell-editing\" aria-label=\"inline cell editing permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inline Cell Editing</h2>\n<p>End-users can click cells to activate in-place editors if you include the <code class=\"language-text\">TableInlineCellEditing</code> plugin in the Grid's configuration. They can move focus or press Enter to save changes, or press Esc to discard the changes and deactivate the cell editor.</p>\n<p>You can handle other keyboard actions. For example, the demo below shows how to <a href=\"./fundamentals.md#customize-the-appearance\">override</a> the <code class=\"language-text\">Table.Cell</code> component so that the Tab key advances the cursor to the next cell:</p>\n<p>.embedded-demo({ \"path\": \"grid-editing/inline-cell-editing\", \"showThemeSelector\": true })</p>\n<p><code class=\"language-text\">TableInlineCellEditing</code> does not provide the capability to add new rows. To implement it, use the <code class=\"language-text\">EditingState</code> plugin in controlled mode as shown in the following demo:</p>\n<p>.embedded-demo({ \"path\": \"grid-editing/cell-editing-tab-with-edit-column\", \"showThemeSelector\": true })</p>\n<h2 id=\"disable-editing-in-a-column\"><a href=\"#disable-editing-in-a-column\" aria-label=\"disable editing in a column permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disable Editing in a Column</h2>\n<p>You can use the <a href=\"../reference/editing-state.md\">EditingState</a> plugin's <code class=\"language-text\">columnExtensions</code> property to prevent a specific column for being edited.</p>\n<p>.embedded-demo({ \"path\": \"grid-editing/disable-column-editing\", \"showThemeSelector\": true })</p>\n<h2 id=\"data-validation\"><a href=\"#data-validation\" aria-label=\"data validation permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Validation</h2>\n<p>Changes can be validated as the user types. You can disable the Save button if any required field is empty.</p>\n<p>.embedded-demo({ \"path\": \"grid-editing/validation-on-typing\", \"showThemeSelector\": true })</p>\n<p>Changes can also be validated in the <code class=\"language-text\">onCommit</code> function. In this case, you can omit the <code class=\"language-text\">setState</code> call and rollback the changes if they are invalid.</p>\n<p>.embedded-demo({ \"path\": \"grid-editing/validation-on-commit\", \"showThemeSelector\": true })</p>","fields":{"technology":"react/grid","section":"docs"},"frontmatter":{"title":""}}},"pageContext":{"slug":"react/grid/docs/guides/editing/"}},"staticQueryHashes":["3159585216","3662068265"]}