import React, { useState } from 'react';<%&additionalImports%>
import {
  SummaryState,
  IntegratedSummary,
  DataTypeProvider,
} from '@devexpress/dx-react-grid';
import {
  Grid,
  Table,
  TableHeaderRow,
  TableSummaryRow,
} from '@devexpress/dx-react-grid-<%&themeName%>';

import {
  generateRows,
  globalSalesValues,
} from '../../../demo-data/generator';

const summaryCalculator = (type, rows, getValue) => {
  if (type === 'median') {
    if (!rows.length) {
      return null;
    }
    const sortedRows = rows.sort((a, b) => getValue(a) - getValue(b));
    if (rows.length % 2 === 1) {
      return getValue(sortedRows[(sortedRows.length + 1) / 2]);
    }
    const halfIndex = sortedRows.length / 2;
    return (getValue(sortedRows[halfIndex]) + getValue(sortedRows[halfIndex + 1])) / 2;
  }
  return IntegratedSummary.defaultCalculator(type, rows, getValue);
};

const messages = {
  median: 'Median',
};

const CurrencyFormatter = ({ value }) => (
  value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })
);

const CurrencyTypeProvider = props => (
  <DataTypeProvider
    formatterComponent={CurrencyFormatter}
    {...props}
  />
);

export default () => {
  const [columns] = useState([
    { name: 'region', title: 'Region' },
    { name: 'sector', title: 'Sector' },
    { name: 'customer', title: 'Customer' },
    { name: 'product', title: 'Product' },
    { name: 'amount', title: 'Sale Amount' },
  ]);
  const [rows] = useState(generateRows({ columnValues: globalSalesValues, length: 8 }));
  const [tableColumnExtensions] = useState([
    { columnName: 'amount', align: 'right' },
  ]);
  const [totalSummaryItems] = useState([
    { columnName: 'amount', type: 'avg' },
    { columnName: 'amount', type: 'median' },
  ]);
  const [currencyColumns] = useState(['amount']);

  return (
    <<%&wrapperTag%><%&wrapperAttributes%>>
      <Grid
        rows={rows}
        columns={columns}
      >
        <CurrencyTypeProvider
          for={currencyColumns}
        />
        <SummaryState
          totalItems={totalSummaryItems}
        />
        <IntegratedSummary
          calculator={summaryCalculator}
        />
        <Table
          columnExtensions={tableColumnExtensions}
        />
        <TableHeaderRow />
        <TableSummaryRow
          messages={messages}
        />
      </Grid>
    </<%&wrapperTag%>>
  );
};
