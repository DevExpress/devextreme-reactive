{"componentChunkName":"component---src-templates-page-jsx","path":"/react/grid/docs/guides/filtering/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"react-grid---filtering\"><a href=\"#react-grid---filtering\" aria-label=\"react grid   filtering permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Grid - Filtering</h1>\n<p>The Grid component supports filtering data by a column value programmatically or using the value an end user types in the corresponding Filter Row editor. The filtering state management, Filter Row rendering, and filtering logic are implemented in the related plugins.</p>\n<h2 id=\"related-plugins\"><a href=\"#related-plugins\" aria-label=\"related plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related Plugins</h2>\n<p>The following plugins implement filtering features:</p>\n<ul>\n<li><a href=\"../reference/filtering-state.md\">FilteringState</a> - controls the filtering state</li>\n<li><a href=\"../reference/integrated-filtering.md\">IntegratedFiltering</a> - performs built-in data filtering</li>\n<li><a href=\"../reference/table-filter-row.md\">TableFilterRow</a> - renders a filter row</li>\n</ul>\n<p>Note that <a href=\"./plugin-overview.md#plugin-order\">plugin order</a> is important.</p>\n<h2 id=\"basic-setup\"><a href=\"#basic-setup\" aria-label=\"basic setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Setup</h2>\n<p>Import the plugins listed above to set up a Grid with basic filtering.</p>\n<h3 id=\"uncontrolled-mode\"><a href=\"#uncontrolled-mode\" aria-label=\"uncontrolled mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uncontrolled Mode</h3>\n<p>In <a href=\"controlled-and-uncontrolled-modes.md\">uncontrolled mode</a>, specify the initial filtering conditions in the <code class=\"language-text\">FilteringState</code> plugin's <code class=\"language-text\">defaultFilters</code> property.</p>\n<p>.embedded-demo({ \"path\": \"grid-filtering/filter-row\", \"showThemeSelector\": true })</p>\n<h3 id=\"controlled-mode\"><a href=\"#controlled-mode\" aria-label=\"controlled mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Controlled Mode</h3>\n<p>In <a href=\"controlled-and-uncontrolled-modes.md\">controlled mode</a>, pass the filtering options to the <code class=\"language-text\">FilteringState</code> plugin's <code class=\"language-text\">filters</code> property and handle the <code class=\"language-text\">onFiltersChange</code> event to control the filtering state externally.</p>\n<p>.embedded-demo({ \"path\": \"grid-filtering/controlled-mode\", \"showThemeSelector\": true })</p>\n<h2 id=\"use-custom-filtering-algorithms\"><a href=\"#use-custom-filtering-algorithms\" aria-label=\"use custom filtering algorithms permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use Custom Filtering Algorithms</h2>\n<p>You can also specify a filtering predicate using the <code class=\"language-text\">IntegratedFiltering</code> plugin's <code class=\"language-text\">columnExtenstions</code> property to implement custom filtering logic for specific columns.</p>\n<p>.embedded-demo({ \"path\": \"grid-filtering/custom-filtering-algorithm\", \"showThemeSelector\": true })</p>\n<h2 id=\"disable-filtering-by-a-column\"><a href=\"#disable-filtering-by-a-column\" aria-label=\"disable filtering by a column permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Disable Filtering by a Column</h2>\n<p>You can prevent filtering by a specific column using the <a href=\"../reference/filtering-state.md\">FilteringState</a> plugin's <code class=\"language-text\">columnExtensions</code> property.</p>\n<p>.embedded-demo({ \"path\": \"grid-filtering/disable-column-filtering\", \"showThemeSelector\": true })</p>\n<h2 id=\"custom-filter-operations\"><a href=\"#custom-filter-operations\" aria-label=\"custom filter operations permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Filter Operations</h2>\n<p>Specify the <a href=\"../reference/table-filter-row.md\">TableFilterRow</a> plugin's <code class=\"language-text\">showFilterSelector</code> property to allow filter operation selection for an end user. Define which filter operations are available for particular columns using the <a href=\"../reference/data-type-provider.md\">DataTypeProvider</a> <code class=\"language-text\">availableFilterOperations</code> property. You can also define a custom operation by passing a filtering predicate to the <a href=\"../reference/integrated-filtering.md\">IntegratedFiltering</a> plugin's <code class=\"language-text\">columnExtensions</code> property.</p>\n<p>.embedded-demo({ \"path\": \"grid-filtering/advanced-filter-row\", \"showThemeSelector\": true })</p>\n<h2 id=\"customize-filter-row-appearance\"><a href=\"#customize-filter-row-appearance\" aria-label=\"customize filter row appearance permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Customize Filter Row Appearance</h2>\n<p>Pass a function that returns a custom component to the <code class=\"language-text\">TableFilterRow</code> plugin's <code class=\"language-text\">cellComponent</code> property to substitute the built-in filter row editors. In this case, delegate the component's state management to the <code class=\"language-text\">TableFilterRow</code> plugin by assigning the function's <code class=\"language-text\">filter</code> and <code class=\"language-text\">onFilter</code> arguments to the corresponding component properties.</p>\n<p>.embedded-demo({ \"path\": \"grid-filtering/custom-filter-row\", \"showThemeSelector\": true })</p>\n<h2 id=\"remote-filtering\"><a href=\"#remote-filtering\" aria-label=\"remote filtering permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remote Filtering</h2>\n<p>It is possible to perform filtering remotely by handling filtering state changes, generating a request, and sending it to the server.</p>\n<p>Filtering options are updated once an end user modifies the text in the Filter Row editor or in another filtering control. Handle the filtering option changes using the <code class=\"language-text\">FilteringState</code> plugin's <code class=\"language-text\">onFiltersChange</code> event and request data from the server using the applied filtering options. Once the filtered data is received from the server, pass it to the <code class=\"language-text\">Grid</code> component's <code class=\"language-text\">rows</code> property.</p>\n<p>Note that you do not need to use the <code class=\"language-text\">IntegratedFiltering</code> plugin for remote filtering.</p>\n<p>.embedded-demo({ \"path\": \"grid-filtering/remote-filtering\", \"showThemeSelector\": true })</p>\n<h2 id=\"use-filtering-with-other-data-processing-plugins\"><a href=\"#use-filtering-with-other-data-processing-plugins\" aria-label=\"use filtering with other data processing plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Use Filtering with Other Data Processing Plugins</h2>\n<p>The order in which the plugins appear in the Grid's container is important when you use filtering features with paging or grouping. You need to choose whether to paginate filtered rows or filter the current page. In the former case, put the <code class=\"language-text\">IntegratedFiltering</code> plugin before the <code class=\"language-text\">IntegratedPaging</code> plugin. Otherwise, inverse the plugins' order.</p>","fields":{"technology":"react/grid","section":"docs"},"frontmatter":{"title":""}}},"pageContext":{"slug":"react/grid/docs/guides/filtering/"}},"staticQueryHashes":["3159585216","3662068265"]}