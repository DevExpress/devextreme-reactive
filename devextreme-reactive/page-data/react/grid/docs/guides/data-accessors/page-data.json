{"componentChunkName":"component---src-templates-page-jsx","path":"/react/grid/docs/guides/data-accessors/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"react-grid---data-accessors\"><a href=\"#react-grid---data-accessors\" aria-label=\"react grid   data accessors permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Grid - Data Accessors</h1>\n<p>The Grid component supports custom data structures. In a common scenario with a simple data structure, you can associate a column with a row field using the columnâ€™s <code class=\"language-text\">name</code> field.</p>\n<h2 id=\"custom-cell-value-getters\"><a href=\"#custom-cell-value-getters\" aria-label=\"custom cell value getters permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Cell Value Getters</h2>\n<p>In the case of nested data structure, use the <code class=\"language-text\">getCellValue</code> function to calculate a column value as demonstrated below:</p>\n<p>.embedded-demo({ \"path\": \"grid-data-accessors/value-getters\", \"showThemeSelector\": true })</p>\n<p>If you use a common value calculation algorithm for all columns, specify the <code class=\"language-text\">getCellValue</code> function on the Grid's level.</p>\n<h2 id=\"custom-cell-value-setters\"><a href=\"#custom-cell-value-setters\" aria-label=\"custom cell value setters permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Cell Value Setters</h2>\n<p>If editing features are enabled, you can use the editing column extension's <code class=\"language-text\">createRowChange</code> function to create a row changes object:</p>\n<p>.embedded-demo({ \"path\": \"grid-data-accessors/value-setters\", \"showThemeSelector\": true })</p>\n<p>Specify the <code class=\"language-text\">EditingState</code> plugin's <code class=\"language-text\">createRowChange</code> property if you use a common algorithm for all columns.</p>","fields":{"technology":"react/grid","section":"docs"},"frontmatter":{"title":""}}},"pageContext":{"slug":"react/grid/docs/guides/data-accessors/"}},"staticQueryHashes":["3159585216","3662068265"]}