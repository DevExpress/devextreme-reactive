import React, { useState, useEffect } from 'react';<%&additionalImports%>
import {
  PagingState,
  CustomPaging,
} from '@devexpress/dx-react-grid';
import {
  Grid,
  Table,
  TableHeaderRow,
  PagingPanel,
} from '@devexpress/dx-react-grid-<%&themeName%>';

import { Loading } from '../../../theme-sources/<%&themeName%>/components/loading';

const URL = 'https://js.devexpress.com/Demos/WidgetsGallery/data/orderItems';

export default () => {
  const [columns] = useState([
    { name: 'OrderNumber', title: 'Order Number' },
    { name: 'OrderDate', title: 'Order Date' },
    { name: 'StoreCity', title: 'Store City' },
    { name: 'StoreState', title: 'Store State' },
    { name: 'Employee', title: 'Employee' },
    { name: 'SaleAmount', title: 'Sale Amount' },
  ]);
  const [rows, setRows] = useState([]);
  const [totalCount, setTotalCount] = useState(0);
  const [pageSize] = useState(6);
  const [currentPage, setCurrentPage] = useState(0);
  const [loading, setLoading] = useState(false);
  const [lastQuery, setLastQuery] = useState();

  const getQueryString = () => (
    `${URL}?take=${pageSize}&skip=${pageSize * currentPage}`
  );

  const loadData = () => {
    const queryString = getQueryString();
    if (queryString !== lastQuery && !loading) {
      setLoading(true);
      fetch(queryString)
        .then(response => response.json())
        .then((data) => {
          setRows(data.items);
          setTotalCount(data.totalCount);
          setLoading(false);
        })
        .catch(() => setLoading(false));
      setLastQuery(queryString);
    }
  };

  useEffect(() => loadData());

  return (
    <<%&wrapperTag%><%&wrapperAttributes%> style={{ position: 'relative' }}>
      <Grid
        rows={rows}
        columns={columns}
      >
        <PagingState
          currentPage={currentPage}
          onCurrentPageChange={setCurrentPage}
          pageSize={pageSize}
        />
        <CustomPaging
          totalCount={totalCount}
        />
        <Table />
        <TableHeaderRow />
        <PagingPanel />
      </Grid>
      {loading && <Loading />}
    </<%&wrapperTag%>>
  );
};
