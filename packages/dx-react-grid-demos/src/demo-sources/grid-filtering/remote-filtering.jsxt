import React, { useState, useEffect } from 'react';<%&additionalImports%>
import { FilteringState } from '@devexpress/dx-react-grid';
import {
  Grid,
  VirtualTable,
  TableHeaderRow,
  TableFilterRow,
} from '@devexpress/dx-react-grid-<%&themeName%>';

import { Loading } from '../../../theme-sources/<%&themeName%>/components/loading';

const URL = 'https://js.devexpress.com/Demos/Mvc/api/DataGridWebApi/Orders';

export default () => {
  const [columns] = useState([
    { name: 'ShipCountry', title: 'Country' },
    { name: 'ShipCity', title: 'City' },
    { name: 'ShipAddress', title: 'Address' },
  ]);
  const [rows, setRows] = useState([]);
  const [filters, setFilters] = useState([]);
  const [loading, setLoading] = useState(true);
  let lastQuery;

  const changeFilters = (value) => {
    setFilters(value);
    setLoading(true);
  };

  const getQueryString = () => {
    let filter = filters.reduce((acc, { columnName, value }) => {
      acc.push(`["${columnName}", "contains", "${encodeURIComponent(value)}"]`);
      return acc;
    }, []).join(',"and",');

    if (filters.length > 1) {
      filter = `[${filter}]`;
    }

    return `${URL}?filter=${filter}`;
  };

  const loadData = () => {
    const queryString = getQueryString();
    if (queryString === lastQuery) {
      setLoading(false);
      return;
    }

    fetch(queryString, { mode: 'cors' })
      .then(response => response.json())
      .then((orders) => {
        setRows(orders.data);
        setLoading(false);
      })
      .catch(() => setLoading(false));
    lastQuery = queryString;
  };

  useEffect(() => {
    if (loading) {
      loadData();
    }
  });

  return (
    <<%&wrapperTag%><%&wrapperAttributes%> style={{ position: 'relative' }}>
      <Grid
        rows={rows}
        columns={columns}
      >
        <FilteringState
          onFiltersChange={changeFilters}
        />
        <VirtualTable />
        <TableHeaderRow />
        <TableFilterRow />
      </Grid>
      {loading && <Loading />}
    </<%&wrapperTag%>>
  );
};
