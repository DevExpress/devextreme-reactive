{"componentChunkName":"component---src-templates-page-jsx","path":"/react/grid/docs/guides/virtual-scrolling/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"react-grid---virtual-scrolling\"><a href=\"#react-grid---virtual-scrolling\" aria-label=\"react grid   virtual scrolling permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Grid - Virtual Scrolling</h1>\n<p>Virtual scrolling allows the Grid component to display thousands of records on a single page. You can use this feature as an alternative to paging.</p>\n<p><strong>Browser Support Notes:</strong></p>\n<ul>\n<li>\n<p>The following browsers do not support virtual scrolling because they do not support <code class=\"language-text\">position: sticky</code>:</p>\n<ul>\n<li>Android Browser before 5.0</li>\n<li>WebView for Android before 5.0</li>\n<li>Internet Explorer</li>\n</ul>\n</li>\n<li>\n<p>Currently, there is an issue with virtual scrolling in Microsoft Edge:</p>\n<ul>\n<li><a href=\"https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/18769340/\" target=\"_blank\" rel=\"noopener noreferrer\">sticky elements flicker on scroll</a></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"related-plugins\"><a href=\"#related-plugins\" aria-label=\"related plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related Plugins</h2>\n<p>The <a href=\"../reference/virtual-table.md\">VirtualTable</a> plugin implements the virtual scrolling mode, and it should be used instead of the <a href=\"../reference/table.md\">Table</a> as they implement the same interfaces.</p>\n<p>Note that the <a href=\"./plugin-overview.md#plugin-order\">plugin order</a> is important.</p>\n<h2 id=\"basic-setup\"><a href=\"#basic-setup\" aria-label=\"basic setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Setup</h2>\n<p>The virtual table contains only the rendered rows; others are replaced with two stub rows whose heights depend on the <code class=\"language-text\">estimatedRowHeight</code> property value and change dynamically as the user scrolls.</p>\n<p>You can change the virtual table's height using the <code class=\"language-text\">height</code> property.</p>\n<p>The following example demonstrates the basic Grid with virtual scrolling:</p>\n<p>.embedded-demo({ \"path\": \"grid-virtual-scrolling/row-virtualization\", \"showThemeSelector\": true })</p>\n<p>The Grid also supports column virtualization, which is demonstrated in the following demo:</p>\n<p>.embedded-demo({ \"path\": \"grid-virtual-scrolling/column-virtualization\", \"showThemeSelector\": true })</p>\n<h2 id=\"fill-the-container\"><a href=\"#fill-the-container\" aria-label=\"fill the container permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Fill the Container</h2>\n<p>If the Grid should have the same size as the container element, set the <code class=\"language-text\">VirtualTable</code> plugin's <code class=\"language-text\">height</code> property to \"auto\" and the Grid root element's style setting to <code class=\"language-text\">height: 100%</code>.</p>\n<p>.embedded-demo({ \"path\": \"grid-virtual-scrolling/stretching-to-parent-element\", \"showThemeSelector\": true })</p>\n<h2 id=\"scroll-to-row\"><a href=\"#scroll-to-row\" aria-label=\"scroll to row permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scroll to Row</h2>\n<p>To scroll the table to a particular row, call the <code class=\"language-text\">scrollToRow</code> method and pass the row ID as its parameter. To call the method, you need the <code class=\"language-text\">VirtualTable</code> plugin's ref.</p>\n<p>In the following demo, the <code class=\"language-text\">scrollToRow</code> method is used to scroll the table to a new or saved row. When you add a new row, it is added to the top of the table, and the table is scrolled to it. When you save the row, its position is changed according to sorting, and the table is scrolled to that position.</p>\n<p>.embedded-demo({ \"path\": \"grid-virtual-scrolling/scroll-to-row\", \"showThemeSelector\": true })</p>\n<p>NOTE: Scrolling to a row cannot be used with <a href=\"./lazy-loading.md/#react-grid---virtual-scrolling-with-remote-data-lazy-loading\">lazy loading</a>. This is because the Grid loads rows in parts in lazy loading mode, and scrolling to a row requires all the row IDs.</p>\n<h2 id=\"note-on-the-use-of-virtualtable-with-datatypeprovider-and-custom-components\"><a href=\"#note-on-the-use-of-virtualtable-with-datatypeprovider-and-custom-components\" aria-label=\"note on the use of virtualtable with datatypeprovider and custom components permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Note on the use of <code class=\"language-text\">VirtualTable</code> with <code class=\"language-text\">DataTypeProvider</code> and custom components</h2>\n<p>If you use a custom <code class=\"language-text\">rowComponent</code> or <code class=\"language-text\">cellComponent</code>, its height and the <code class=\"language-text\">estimatedRowHeight</code> value should be equal. The same applies to a custom formatter defined in the <a href=\"../reference/data-type-provider.md\">DataTypeProvider</a> plugin.</p>","fields":{"technology":"react/grid","section":"docs"},"frontmatter":{"title":""}}},"pageContext":{"slug":"react/grid/docs/guides/virtual-scrolling/"}},"staticQueryHashes":["3159585216","3662068265"]}