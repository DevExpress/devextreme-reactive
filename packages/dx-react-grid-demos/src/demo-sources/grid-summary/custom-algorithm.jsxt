import * as React from 'react';<%&additionalImports%>
import {
  SummaryState,
  IntegratedSummary,
  DataTypeProvider,
} from '@devexpress/dx-react-grid';
import {
  Grid,
  Table,
  TableHeaderRow,
  TableSummaryRow,
} from '@devexpress/dx-react-grid-<%&themeName%>';

import {
  generateRows,
  globalSalesValues,
} from '../../../demo-data/generator';

const summaryTypes = {
  median: (rows, getValue) => {
    if (!rows.length) {
      return 0;
    }
    const sortedRows = rows.sort((a, b) => getValue(a) - getValue(b));
    if (rows.length % 2 === 1) {
      return getValue(sortedRows[(sortedRows.length + 1) / 2]);
    }
    return (getValue(sortedRows[sortedRows.length / 2]) + getValue(sortedRows[sortedRows.length / 2 + 1])) / 2;
  },
};

const messages = {
  median: 'Median',
};

const CurrencyFormatter = ({ value }) =>
  <span>${value}</span>;

const CurrencyTypeProvider = props => (
  <DataTypeProvider
    formatterComponent={CurrencyFormatter}
    {...props}
  />
);

export default class Demo extends React.PureComponent {
  constructor(props) {
    super(props);

    this.state = {
      columns: [
        { name: 'region', title: 'Region' },
        { name: 'sector', title: 'Sector' },
        { name: 'channel', title: 'Channel' },
        { name: 'customer', title: 'Customer' },
        { name: 'product', title: 'Product' },
        { name: 'amount', title: 'Sale Amount' },
      ],
      tableColumnExtensions: [
        { columnName: 'amount', align: 'right' },
      ],
      totalSummaryItems: [
        { columnName: 'amount', type: 'avg' },
        { columnName: 'amount', type: 'median' },
      ],
      currencyColumns: ['amount'],
      rows: generateRows({ columnValues: globalSalesValues, length: 8 }),
    };
  }
  render() {
    const {
      rows, columns, tableColumnExtensions, currencyColumns, totalSummaryItems,
    } = this.state;

    return (
      <<%&wrapperTag%>>
        <Grid
          rows={rows}
          columns={columns}
        >
          <CurrencyTypeProvider
            for={currencyColumns}
          />
          <SummaryState
            totalItems={totalSummaryItems}
          />
          <IntegratedSummary
            types={summaryTypes}
          />
          <Table
            columnExtensions={tableColumnExtensions}
          />
          <TableHeaderRow />
          <TableSummaryRow
            messages={messages}
          />
        </Grid>
      </<%&wrapperTag%>>
    );
  }
}
