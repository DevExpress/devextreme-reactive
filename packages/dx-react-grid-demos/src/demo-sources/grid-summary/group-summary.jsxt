import React, { useState } from 'react';<%&additionalImports%>
import {
  SummaryState,
  GroupingState,
  IntegratedGrouping,
  IntegratedSummary,
  DataTypeProvider,
} from '@devexpress/dx-react-grid';
import {
  Grid,
  Table,
  TableHeaderRow,
  TableGroupRow,
  TableSummaryRow,
} from '@devexpress/dx-react-grid-<%&themeName%>';

import {
  generateRows,
  globalSalesValues,
} from '../../../demo-data/generator';

const CurrencyFormatter = ({ value }) => (
  value.toLocaleString('en-US', { style: 'currency', currency: 'USD' })
);

const CurrencyTypeProvider = props => (
  <DataTypeProvider
    formatterComponent={CurrencyFormatter}
    {...props}
  />
);

export default () => {
  const [columns] = useState([
    { name: 'region', title: 'Region' },
    { name: 'customer', title: 'Customer' },
    { name: 'product', title: 'Product' },
    { name: 'units', title: 'Units' },
    { name: 'amount', title: 'Sale Amount' },
  ]);
  const [rows] = useState(generateRows({ columnValues: globalSalesValues, length: 8 }));
  const [tableColumnExtensions] = useState([
    { columnName: 'amount', align: 'right' },
  ]);
  const [totalSummaryItems] = useState([
    { columnName: 'region', type: 'count' },
    { columnName: 'amount', type: 'sum' },
  ]);
  const [currencyColumns] = useState(['amount']);
  const [grouping] = useState([{ columnName: 'region' }]);
  const [groupSummaryItems] = useState([
    { columnName: 'region', type: 'count' },
    { columnName: 'amount', type: 'sum' },
    {
      columnName: 'amount', type: 'sum', showInGroupFooter: false,
    },
    {
      columnName: 'amount', type: 'max', showInGroupFooter: false, alignByColumn: true,
    },
    {
      columnName: 'units', type: 'sum', showInGroupFooter: false, alignByColumn: true,
    },
  ]);

  return (
    <<%&wrapperTag%><%&wrapperAttributes%>>
      <Grid
        rows={rows}
        columns={columns}
      >
        <CurrencyTypeProvider
          for={currencyColumns}
        />
        <GroupingState
          grouping={grouping}
        />
        <SummaryState
          totalItems={totalSummaryItems}
          groupItems={groupSummaryItems}
        />
        <IntegratedGrouping />
        <IntegratedSummary />
        <Table
          columnExtensions={tableColumnExtensions}
        />
        <TableHeaderRow />
        <TableGroupRow
          showColumnsWhenGrouped
        />
        <TableSummaryRow />
      </Grid>
    </<%&wrapperTag%>>
  );
};
