{"componentChunkName":"component---src-templates-page-jsx","path":"/react/grid/docs/guides/summary-row/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"react-grid---summary-row\"><a href=\"#react-grid---summary-row\" aria-label=\"react grid   summary row permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Grid - Summary Row</h1>\n<p>The Grid component can calculate a summary for all rows (total summary), row groups (group summary), and tree nodes that contain child nodes (tree summary). You can use the corresponding plugins to calculate the summary and manage its state.</p>\n<h2 id=\"related-plugins\"><a href=\"#related-plugins\" aria-label=\"related plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related Plugins</h2>\n<p>The following plugins implement summary features:</p>\n<ul>\n<li><a href=\"../reference/summary-state.md\">SummaryState</a> - manages the data summary state</li>\n<li><a href=\"../reference/integrated-summary.md\">IntegratedSummary</a> - performs the built-in data summary calculation</li>\n<li><a href=\"../reference/custom-summary.md\">CustomSummary</a> - allows you to calculate a custom data summary</li>\n<li><a href=\"../reference/table-summary-row.md\">TableSummaryRow</a> - renders table summary rows</li>\n</ul>\n<p>Note that the <a href=\"./plugin-overview.md#plugin-order\">plugin order</a> is important.</p>\n<h2 id=\"basic-setup\"><a href=\"#basic-setup\" aria-label=\"basic setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Setup</h2>\n<p>Use the <code class=\"language-text\">SummaryState</code>, <code class=\"language-text\">IntegratedSummary</code> (or <code class=\"language-text\">CustomSummary</code>) and <code class=\"language-text\">TableSummaryRow</code> plugins to set up a Grid that displays a data summary.</p>\n<h3 id=\"calculate-built-in-data-summaries\"><a href=\"#calculate-built-in-data-summaries\" aria-label=\"calculate built in data summaries permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calculate Built-in Data Summaries</h3>\n<p>The <code class=\"language-text\">IntegratedSummary</code> plugin performs the built-in summary calculation.</p>\n<p>In the following example, the summary items array is passed to the <code class=\"language-text\">SummaryState</code> plugin's <code class=\"language-text\">totalItems</code> property to calculate the total summary internally.</p>\n<p>.embedded-demo({ \"path\": \"grid-summary/total-summary\", \"showThemeSelector\": true })</p>\n<p>To display group summaries, pass summary items to the <code class=\"language-text\">SummaryState</code> plugin's <code class=\"language-text\">groupItems</code> property. Group summaries are displayed in group footers. You can move the summaries to group captions (set the <code class=\"language-text\">showInGroupFooter</code> property to <code class=\"language-text\">false</code>) or display them in the column for which they are calculated (set the <code class=\"language-text\">alignByColumn</code> property to <code class=\"language-text\">true</code>).</p>\n<p>.embedded-demo({ \"path\": \"grid-summary/group-summary\", \"showThemeSelector\": true })</p>\n<p>The following example demonstrates tree summary rows. In this example, the summary items array is passed to the <code class=\"language-text\">SummaryState</code> plugin's <code class=\"language-text\">treeItems</code> property.</p>\n<p>.embedded-demo({ \"path\": \"grid-summary/tree-summary\", \"showThemeSelector\": true })</p>\n<h3 id=\"calculate-custom-data-summaries\"><a href=\"#calculate-custom-data-summaries\" aria-label=\"calculate custom data summaries permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Calculate Custom Data Summaries</h3>\n<p>The <code class=\"language-text\">CustomSummary</code> plugin allows you to calculate a data summary on a remote server or local machine.</p>\n<p>The following example demonstrates custom total summary calculation. In this example, the summary items array is passed to the <code class=\"language-text\">SummaryState</code> plugin's <code class=\"language-text\">totalItems</code> property and the calculated summary values to the <code class=\"language-text\">totalValues</code> property.</p>\n<p>Select several rows to calculate a summary for them.</p>\n<p>.embedded-demo({ \"path\": \"grid-summary/custom-summary\", \"showThemeSelector\": true })</p>\n<p>Use the <code class=\"language-text\">CustomSummary</code> plugin's <code class=\"language-text\">groupValues</code> and <code class=\"language-text\">treeValues</code> properties to calculate a custom group and tree summary.</p>\n<h2 id=\"implement-a-custom-algorithm\"><a href=\"#implement-a-custom-algorithm\" aria-label=\"implement a custom algorithm permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Implement a Custom Algorithm</h2>\n<p>The <code class=\"language-text\">IntegratedSummary</code> plugin allows you to extend the built-in summary types (<code class=\"language-text\">count</code>, <code class=\"language-text\">sum</code>, <code class=\"language-text\">max</code>, <code class=\"language-text\">min</code>, <code class=\"language-text\">avg</code>) with custom types. The following example shows a custom <code class=\"language-text\">median</code> summary type:</p>\n<p>.embedded-demo({ \"path\": \"grid-summary/custom-algorithm\", \"showThemeSelector\": true })</p>\n<h2 id=\"prevent-summary-formatting\"><a href=\"#prevent-summary-formatting\" aria-label=\"prevent summary formatting permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Prevent Summary Formatting</h2>\n<p>If a <code class=\"language-text\">DataTypeProvider</code> plugin is assigned to a column, its value formatting component is applied to a summary row. Use the <code class=\"language-text\">formattlessSummaryTypes</code> property to specify summary types that should not be formatted. The following example shows a custom <code class=\"language-text\">overprice</code> summary type that is not formatted:</p>\n<p>.embedded-demo({ \"path\": \"grid-summary/formatless-custom-algorithm\", \"showThemeSelector\": true })</p>","fields":{"technology":"react/grid","section":"docs"},"frontmatter":{"title":""}}},"pageContext":{"slug":"react/grid/docs/guides/summary-row/"}},"staticQueryHashes":["3159585216","3662068265"]}