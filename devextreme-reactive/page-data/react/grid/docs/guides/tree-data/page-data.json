{"componentChunkName":"component---src-templates-page-jsx","path":"/react/grid/docs/guides/tree-data/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"react-grid---tree-data\"><a href=\"#react-grid---tree-data\" aria-label=\"react grid   tree data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Grid - Tree Data</h1>\n<p>The Grid component can show tree data. Use the corresponding plugins to show tree data and manage the expanded rows' state programmatically or via the UI (a column that contains UI elements for row expanding/collapsing).</p>\n<h2 id=\"related-plugins\"><a href=\"#related-plugins\" aria-label=\"related plugins permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Related Plugins</h2>\n<p>The following plugins implement tree data support:</p>\n<ul>\n<li><a href=\"../reference/tree-data-state.md\">TreeDataState</a> - controls the expanded rows state</li>\n<li><a href=\"../reference/custom-tree-data.md\">CustomTreeData</a> - converts custom tree data to a supported format</li>\n<li><a href=\"../reference/table-tree-column.md\">TableTreeColumn</a> - renders the table column with an indent, toggle button, and selection controls</li>\n</ul>\n<p>Note that the <a href=\"./plugin-overview.md#plugin-order\">plugin order</a> is important.</p>\n<h2 id=\"basic-setup\"><a href=\"#basic-setup\" aria-label=\"basic setup permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Setup</h2>\n<p>Use the <code class=\"language-text\">TreeDataState</code>, <code class=\"language-text\">CustomTreeData</code> and <code class=\"language-text\">TableTreeColumn</code> plugins to set up a Grid with simple tree data structure.</p>\n<h3 id=\"custom-tree-data\"><a href=\"#custom-tree-data\" aria-label=\"custom tree data permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Custom Tree Data</h3>\n<p>In the following example, the data is specified as grouped array. Specify the <code class=\"language-text\">CustomTreeData</code> plugin's <code class=\"language-text\">getChildRows</code> property to parse the given array.</p>\n<p>.embedded-demo({ \"path\": \"grid-tree-data/hierarchical-tree\", \"showThemeSelector\": true })</p>\n<p>You can also transform tree data defined as a plain array.</p>\n<p>.embedded-demo({ \"path\": \"grid-tree-data/plain-tree\", \"showThemeSelector\": true })</p>\n<h3 id=\"uncontrolled-mode\"><a href=\"#uncontrolled-mode\" aria-label=\"uncontrolled mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Uncontrolled Mode</h3>\n<p>In <a href=\"controlled-and-uncontrolled-modes.md\">uncontrolled mode</a>, specify the initially expanded rows' IDs in the <code class=\"language-text\">TreeDataState</code> plugin's <code class=\"language-text\">defaultExpandedRowIds</code> property.</p>\n<p>.embedded-demo({ \"path\": \"grid-tree-data/uncontrolled-mode\", \"showThemeSelector\": true })</p>\n<h3 id=\"controlled-mode\"><a href=\"#controlled-mode\" aria-label=\"controlled mode permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Controlled Mode</h3>\n<p>In <a href=\"controlled-and-uncontrolled-modes.md\">controlled mode</a>, pass the expanded row ids to the <code class=\"language-text\">TreeDataState</code> plugin's <code class=\"language-text\">expandedRowIds</code> property and handle the <code class=\"language-text\">onExpandedRowIdsChange</code> event to control the tree data state externally.</p>\n<p>.embedded-demo({ \"path\": \"grid-tree-data/controlled-mode\", \"showThemeSelector\": true })</p>\n<h2 id=\"configure-hierarchical-selection-controls\"><a href=\"#configure-hierarchical-selection-controls\" aria-label=\"configure hierarchical selection controls permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure Hierarchical Selection Controls</h2>\n<p>The <code class=\"language-text\">TableTreeColumn</code> plugin allows showing hierarchical selection controls.</p>\n<h3 id=\"basic-selection\"><a href=\"#basic-selection\" aria-label=\"basic selection permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Basic Selection</h3>\n<p>Do the following to enable this feature:</p>\n<ul>\n<li>Configure the <code class=\"language-text\">SelectionState</code> plugin. See <a href=\"selection.md\">Selection</a>.</li>\n<li>Set the <code class=\"language-text\">TableTreeColumn</code> plugin's <code class=\"language-text\">showSelectionControls</code> property to true to show checkboxes.</li>\n</ul>\n<p>.embedded-demo({ \"path\": \"grid-tree-data/selection-controls\", \"showThemeSelector\": true })</p>\n<p>You can also combine the <code class=\"language-text\">TableTreeColumn</code> plugin with the <code class=\"language-text\">TableSelection</code> plugin to highlight the selected rows and handle the click event on the entire row.</p>\n<h3 id=\"select-all\"><a href=\"#select-all\" aria-label=\"select all permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Select All</h3>\n<p>Do the following to show the Select All checkbox in the header row:</p>\n<ul>\n<li>Configure the <code class=\"language-text\">TableHeaderRow</code> plugin. See <a href=\"fundamentals.md\">Fundamentals</a>.</li>\n<li>Configure the <code class=\"language-text\">IntegratedSelection</code> plugin. See <a href=\"selection.md\">Selection</a>.</li>\n<li>Set the <code class=\"language-text\">TableTreeColumn</code> plugin's <code class=\"language-text\">showSelectAll</code> property to true to show Select All checkbox.</li>\n</ul>\n<p>.embedded-demo({ \"path\": \"grid-tree-data/select-all\", \"showThemeSelector\": true })</p>\n<h2 id=\"load-remote-data-on-demand\"><a href=\"#load-remote-data-on-demand\" aria-label=\"load remote data on demand permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Load Remote Data on Demand</h2>\n<p>You can handle the Grid's tree data state changes to request nested data from the server according to the expanded row ID.</p>\n<p>Tree data options are updated once an end-user interacts with the UI. Handle option changes using the <code class=\"language-text\">TreeDataState</code> plugin's <code class=\"language-text\">onExpandedRowIdsChange</code> event and request data from the server using the applied tree data options. Once the page data is received from the server, pass it to the <code class=\"language-text\">Grid</code> component's <code class=\"language-text\">rows</code> property.</p>\n<p>.embedded-demo({ \"path\": \"grid-tree-data/remote\", \"showThemeSelector\": true })</p>","fields":{"technology":"react/grid","section":"docs"},"frontmatter":{"title":""}}},"pageContext":{"slug":"react/grid/docs/guides/tree-data/"}},"staticQueryHashes":["3159585216","3662068265"]}