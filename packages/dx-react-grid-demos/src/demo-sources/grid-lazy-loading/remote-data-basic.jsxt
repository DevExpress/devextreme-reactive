import React, { useState, useEffect } from 'react';<%&additionalImports%>
import {
  VirtualTableState,
} from '@devexpress/dx-react-grid';
import {
  Grid,
  VirtualTable,
  TableHeaderRow,
} from '@devexpress/dx-react-grid-<%&themeName%>';

const VIRTUAL_PAGE_SIZE = 100;
const MAX_ROWS = 50000;
const URL = 'https://js.devexpress.com/Demos/WidgetsGalleryDataService/api/Sales';
const getRowId = row => row.Id;
const buildQueryString = (skip, take) => `${URL}?skip=${skip}&take=${take}`;

export default () => {
  const [columns] = useState([
    { name: 'Id', title: 'Id', getCellValue: row => row.Id },
    { name: 'ProductCategoryName', title: 'Category', getCellValue: row => row.ProductCategoryName },
    { name: 'StoreName', title: 'Store', getCellValue: row => row.StoreName },
    { name: 'ProductName', title: 'Product', getCellValue: row => row.ProductName },
    { name: 'SalesAmount', title: 'Amount', getCellValue: row => row.SalesAmount },
  ]);
  const [rows, setRows] = useState([]);
  const [tableColumnExtensions] = useState([
    { columnName: 'Id', width: 80 },
    { columnName: 'ProductCategoryName', width: 220 },
    { columnName: 'StoreName', width: 220 },
    { columnName: 'SalesAmount', width: 120 },
  ]);
  const [skip, setSkip] = useState(0);
  const [requestedSkip, setRequestedSkip] = useState(0);
  const [take, setTake] = useState(VIRTUAL_PAGE_SIZE * 2);
  const [totalCount, setTotalCount] = useState(MAX_ROWS);
  const [loading, setLoading] = useState(false);
  const [lastQuery, setLastQuery] = useState();

  const getRemoteRows = (newRequestedSkip, newTake) => {
    setRequestedSkip(newRequestedSkip);
    setTake(newTake);
  };

  const loadData = () => {
    const query = buildQueryString(requestedSkip, take);
    if (query !== lastQuery && !loading) {
      setLoading(true);
      fetch(query)
        .then(response => response.json())
        .then(({ data }) => {
          setSkip(requestedSkip);
          setRows(data);
          setLoading(false);
          setTotalCount(MAX_ROWS);
        })
        .catch(() => setLoading(false));
      setLastQuery(query);
    }
  };

  useEffect(() => loadData());

  return (
    <<%&wrapperTag%><%&wrapperAttributes%>>
      <Grid
        rows={rows}
        columns={columns}
        getRowId={getRowId}
      >
        <VirtualTableState
          loading={loading}
          totalRowCount={totalCount}
          pageSize={VIRTUAL_PAGE_SIZE}
          skip={skip}
          getRows={getRemoteRows}
        />
        <VirtualTable columnExtensions={tableColumnExtensions} />
        <TableHeaderRow />
      </Grid>
    </<%&wrapperTag%>>
  );
};
